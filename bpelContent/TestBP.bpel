<!-- TestBP BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Apr 26 15:21:09 KST 2015 -->
<bpel:process name="TestBP"
         targetNamespace="kr.co.smartylab"
         suppressJoinFailure="yes"
         xmlns:tns="kr.co.smartylab"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://smartylab.co.kr/products/op/adapter" xmlns:ns1="http://www.w3.org/2001/XMLSchema">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://smartylab.co.kr/products/op/adapter" location="concert_adapter.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="TestBPArtifacts.wsdl" namespace="kr.co.smartylab" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:TestBP"
                     myRole="TestBPProvider"
                     />
        <bpel:partnerLink name="ConcertAdapterPL" partnerLinkType="tns:ConcertAdapterPLT" partnerRole="ConcertAdapterPLTRole"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:TestBPRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:TestBPResponseMessage"/>
        <bpel:variable name="ConcertAdapterPLResponse" messageType="ns:invoke_adapterOutput"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLRequest" messageType="ns:invoke_adapterInput"></bpel:variable>
        <bpel:variable name="clientRequest" messageType="tns:SendTopicMsgRequest"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLResponse1" messageType="ns:send_topic_msgOutput"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLRequest1" messageType="ns:send_topic_msgInput"></bpel:variable>
        <bpel:variable name="clientResponse" messageType="tns:SendTopicMsgResponse"></bpel:variable>
        <bpel:variable name="clientRequest1" messageType="tns:SendServiceMsgRequest"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLResponse2" messageType="ns:send_service_msgOutput"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLRequest2" messageType="ns:send_service_msgInput"></bpel:variable>
        <bpel:variable name="clientResponse1" messageType="tns:SendServiceMsgResponse"></bpel:variable>
        <bpel:variable name="clientRequest2" messageType="tns:SendActionMsgRequest"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLResponse3" messageType="ns:send_action_msgOutput"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLRequest3" messageType="ns:send_action_msgInput"></bpel:variable>
        <bpel:variable name="clientResponse2" messageType="tns:SendActionMsgResponse"></bpel:variable>
        <bpel:variable name="clientRequest3" messageType="tns:reportRuntimeFaultRequest"></bpel:variable>
        <bpel:variable name="faultCode" type="ns1:string"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLResponse4" messageType="ns:release_allocated_resourcesOutput"></bpel:variable>
        <bpel:variable name="ConcertAdapterPLRequest4" messageType="ns:release_allocated_resourcesInput"></bpel:variable>
        <bpel:variable name="clientRequest4" messageType="tns:setActionResultRequest"></bpel:variable>
        <bpel:variable name="ServiceResult" type="ns1:string"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in TestBP.wsdl 
             -->
        
        
        <!-- Generate reply to synchronous request -->
        
        <bpel:pick name="AssignLinkGraph" createInstance="yes">
            <bpel:onMessage partnerLink="client" operation="process" portType="tns:TestBP" variable="input">
                <bpel:sequence>
                    <bpel:assign validate="no" name="SpecifyLinkGraph">
                        <bpel:copy>
                            <bpel:from><bpel:literal><tns:invoke_adapter xmlns:tns="http://smartylab.co.kr/products/op/adapter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:LinkGraph>
    <tns:name>tns:name</tns:name>
    <tns:topics>
      <tns:Topic>
        <tns:type>tns:type</tns:type>
        <tns:id>tns:id</tns:id>
      </tns:Topic>
    </tns:topics>
    <tns:actions>
      <tns:Action>
        <tns:type>tns:type</tns:type>
        <tns:id>tns:id</tns:id>
        <tns:goal_type>tns:goal_type</tns:goal_type>
      </tns:Action>
    </tns:actions>
    <tns:edges>
      <tns:Edge>
        <tns:start>tns:start</tns:start>
        <tns:finish>tns:finish</tns:finish>
        <tns:remap_from>tns:remap_from</tns:remap_from>
        <tns:remap_to>tns:remap_to</tns:remap_to>
      </tns:Edge>
    </tns:edges>
    <tns:services>
      <tns:Service>
        <tns:persistency>tns:persistency</tns:persistency>
        <tns:type>tns:type</tns:type>
        <tns:id>tns:id</tns:id>
      </tns:Service>
    </tns:services>
    <tns:nodes>
      <tns:Node>
        <tns:max>0</tns:max>
        <tns:min>0</tns:min>
        <tns:id>tns:id</tns:id>
        <tns:parameters>
          <tns:parameter>
            <tns:message>tns:message</tns:message>
            <tns:frequency>0</tns:frequency>
          </tns:parameter>
        </tns:parameters>
        <tns:uri>tns:uri</tns:uri>
      </tns:Node>
    </tns:nodes>
    <tns:methods>
      <tns:Method>
        <tns:return_name>tns:return_name</tns:return_name>
        <tns:namespace>tns:namespace</tns:namespace>
        <tns:name>tns:name</tns:name>
        <tns:param>tns:param</tns:param>
        <tns:address>tns:address</tns:address>
      </tns:Method>
    </tns:methods>
  </tns:LinkGraph>
</tns:invoke_adapter>
</bpel:literal></bpel:from>
                            <bpel:to variable="ConcertAdapterPLRequest" part="parameters"></bpel:to>
                        </bpel:copy>
                        
                    </bpel:assign>
                    <bpel:invoke name="RequestResourceAllocation" partnerLink="ConcertAdapterPL" operation="invoke_adapter" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest" outputVariable="ConcertAdapterPLResponse"></bpel:invoke>
                    <bpel:assign validate="no" name="AssignResourceAllocationResult">
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="ConcertAdapterPLResponse">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="payload" variable="output">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:reply name="ReplyResourceAllocationResult" partnerLink="client" operation="process" portType="tns:TestBP" variable="output"></bpel:reply>
                </bpel:sequence>
            </bpel:onMessage>
        </bpel:pick>
        <bpel:pick name="InvokeRapp">
            
            <bpel:onMessage partnerLink="client" operation="SendServiceMsg" portType="tns:TestBP" variable="clientRequest1">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignServiceMsg">
                        
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest1">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:namespace]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="ConcertAdapterPLRequest2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:namespace]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest1">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:message_val]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="ConcertAdapterPLRequest2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:message_val]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke name="RequestToSendService" partnerLink="ConcertAdapterPL" operation="send_service_msg" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest2" outputVariable="ConcertAdapterPLResponse2"></bpel:invoke>
                    
                    
                    <bpel:assign validate="no" name="AssignResult">
                        <bpel:copy>
                            <bpel:from part="parameters" variable="ConcertAdapterPLResponse2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                            </bpel:from>
                            <bpel:to variable="ServiceResult"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:if name="If1">
                        <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[string($ServiceResult)=string("1234")]]></bpel:condition>
                        <bpel:sequence>
                            <bpel:assign validate="no" name="AssignServiceResult">
                                <bpel:copy>
                                    <bpel:from part="parameters" variable="ConcertAdapterPLResponse2">
                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="clientResponse1">
                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:out]]></bpel:query>
                                    </bpel:to>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:reply name="ReplyServiceResult" partnerLink="client" operation="SendServiceMsg" portType="tns:TestBP" variable="clientResponse1"></bpel:reply>
                        </bpel:sequence>
                        <bpel:else>
                            <bpel:sequence>
                                <bpel:invoke name="ReleaseResources" partnerLink="ConcertAdapterPL" operation="release_allocated_resources" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest4" outputVariable="ConcertAdapterPLResponse4"></bpel:invoke>
                                <bpel:exit name="TerminateBP"></bpel:exit>
                            </bpel:sequence>
                        </bpel:else>
                    </bpel:if>
                </bpel:sequence>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="client" operation="SendActionMsg" portType="tns:TestBP" variable="clientRequest2">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignActionMsg">
                        
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:namespace]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="ConcertAdapterPLRequest3">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:namespace]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:message_val]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="ConcertAdapterPLRequest3">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:message_val]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke name="RequestToSendAction" partnerLink="ConcertAdapterPL" operation="send_action_msg" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest3" outputVariable="ConcertAdapterPLResponse3"></bpel:invoke>
                    <bpel:assign validate="no" name="AssignActionSendingState">
                        <bpel:copy>
                            <bpel:from part="parameters" variable="ConcertAdapterPLResponse3">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="clientResponse2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:out]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:reply name="ReplyActionSendingState" partnerLink="client" operation="SendActionMsg" portType="tns:TestBP" variable="clientResponse2"></bpel:reply>
                </bpel:sequence>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="client" operation="reportRuntimeFault" portType="tns:TestBP" variable="clientRequest3">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignFaultCode">
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest3">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:faultCode]]></bpel:query>
                            </bpel:from>
                            <bpel:to variable="faultCode"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:if name="If">
                        <bpel:condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[string(faultCode)=string("RappNotAvailableFault")]]></bpel:condition>
                        <bpel:sequence>
                            <bpel:invoke name="releaseResources" partnerLink="ConcertAdapterPL" operation="release_allocated_resources" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest4" outputVariable="ConcertAdapterPLResponse4"></bpel:invoke>
                            <bpel:exit name="Exit"></bpel:exit>
                        </bpel:sequence>
                        <bpel:else>
                            <bpel:sequence>
                                <bpel:assign validate="no" name="AssignServiceInput">
                                    <bpel:copy>
                                        <bpel:from part="parameters" variable="clientRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:namespace]]></bpel:query>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="ConcertAdapterPLRequest2">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:namespace]]></bpel:query>
                                        </bpel:to>
                                    </bpel:copy>
                                    <bpel:copy>
                                        <bpel:from part="parameters" variable="clientRequest1">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:message_val]]></bpel:query>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="ConcertAdapterPLRequest2">
                                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:message_val]]></bpel:query>
                                        </bpel:to>
                                    </bpel:copy>
                                </bpel:assign>
                                <bpel:invoke name="ResendServiceRequest" partnerLink="ConcertAdapterPL" operation="send_service_msg" portType="ns:concert_adapter_soap_serverPortType" inputVariable="ConcertAdapterPLRequest2" outputVariable="ConcertAdapterPLResponse2"></bpel:invoke>
                            </bpel:sequence>
                        </bpel:else>
                    </bpel:if>
                </bpel:sequence>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="client" operation="setActionResult" portType="tns:TestBP" variable="clientRequest4">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignRappExecutionResult">
                        
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="clientRequest4">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:in]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="clientResponse2">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:out]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:reply name="ReplyRappExecutionResult" partnerLink="client" operation="SendActionMsg" portType="tns:TestBP" variable="clientResponse2"></bpel:reply>
                </bpel:sequence>
            </bpel:onMessage>
        </bpel:pick>
        
    </bpel:sequence>
</bpel:process>

